namespace Phabrico.Miscellaneous
{
    /// <summary>
    /// Pseudo-Enumeration class which represents the type of authentication mechanisms in Phabrico
    /// </summary>
    public class AuthenticationFactor
    {
        /// <summary>
        /// internal "enum" value
        /// </summary>
        private string value = AuthenticationFactor.Knowledge;

        /// <summary>
        /// User needs to enter a user name and a password to log in into Phabrico and will have full access.
        /// The database encryption key will be generated by these 2 key fields
        /// </summary>
        public const string Knowledge = "Knowledge";

        /// <summary>
        /// User will be automatically logged in into Phabrico by means of its Windows account and has full access.
        /// The database encryption key will be generated by the DPAPI keys of the Windows account which is logged on.
        /// Remote access will not work
        /// </summary>
        public const string Ownership = "Ownership";

        /// <summary>
        /// User will be automatically logged in into Phabrico and will not have full access.
        /// E.g. synchronization will not be available.
        /// The (public) database encryption key is stored in the Phabrico dataase
        /// </summary>
        public const string Public = "Public";

        /// <summary>
        /// Converter for string to AuthenticationFactor
        /// </summary>
        /// <param name="authenticationFactorValue"></param>
        public static implicit operator AuthenticationFactor(string authenticationFactorValue)
        {
            return new AuthenticationFactor()
            {
                value = (authenticationFactorValue == Ownership) ? Ownership
                      : (authenticationFactorValue == Public) ? Public
                      : Knowledge
            };
        }

        /// <summary>
        /// Converter for AuthenticationFactor to string
        /// </summary>
        /// <param name="authenticationFactor"></param>
        public static implicit operator string(AuthenticationFactor authenticationFactor)
        {
            return authenticationFactor.value;
        }
    }
}
